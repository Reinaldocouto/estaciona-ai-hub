# Kubernetes Deployment para Estaciona Aí
# Para aplicar: kubectl apply -f k8s/deployment.yaml

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: estaciona-frontend
  namespace: default
  labels:
    app: estaciona-frontend
    component: web
spec:
  replicas: 2  # Para alta disponibilidade
  selector:
    matchLabels:
      app: estaciona-frontend
  template:
    metadata:
      labels:
        app: estaciona-frontend
        component: web
    spec:
      containers:
        - name: web
          image: ghcr.io/reinaldocouto/estaciona-frontend:latest
          ports:
            - containerPort: 80
              name: http
          env:
            # Variáveis podem ser injetadas via ConfigMap/Secret
            - name: NGINX_PORT
              value: "80"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: estaciona-frontend-svc
  namespace: default
  labels:
    app: estaciona-frontend
spec:
  selector:
    app: estaciona-frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP

---
# ML Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: estaciona-ml
  namespace: default
  labels:
    app: estaciona-ml
    component: api
spec:
  replicas: 2  # Para alta disponibilidade
  selector:
    matchLabels:
      app: estaciona-ml
  template:
    metadata:
      labels:
        app: estaciona-ml
        component: api
    spec:
      containers:
        - name: ml-api
          image: ghcr.io/reinaldocouto/estaciona-ml:latest
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: PORT
              value: "8000"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5

---
# ML Service
apiVersion: v1
kind: Service
metadata:
  name: estaciona-ml-svc
  namespace: default
  labels:
    app: estaciona-ml
spec:
  selector:
    app: estaciona-ml
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
  type: ClusterIP

---
# Ingress para expor serviços (opcional)
# Requer um Ingress Controller (nginx, traefik, etc.)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: estaciona-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: estaciona-ai.local  # Configure seu domínio
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: estaciona-frontend-svc
                port:
                  number: 80
          - path: /api/ml
            pathType: Prefix
            backend:
              service:
                name: estaciona-ml-svc
                port:
                  number: 8000

---
# ConfigMap para configurações (opcional)
apiVersion: v1
kind: ConfigMap
metadata:
  name: estaciona-config
  namespace: default
data:
  VITE_ML_RANK_URL: "http://estaciona-ml-svc:8000"
  # Outras configurações não sensíveis

# Para configurações sensíveis, use Secrets:
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: estaciona-secrets
#   namespace: default
# type: Opaque
# data:
#   VITE_SUPABASE_ANON_KEY: <base64-encoded-key>
#   VITE_GMAPS_KEY: <base64-encoded-key>